{
  "openapi": "3.0.0",
  "info": {
    "title": "ATS Demo API",
    "version": "1.0.0",
    "description": "Swagger documentation for ATS Demo API"
  },
  "paths": {
    "/api/users": {
      "get": {
        "summary": "Retrieve a list of users",
        "tags": ["User"],
        "responses": {
          "200": {
            "description": "Successful response with list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "tags": ["User"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "summary": "Retrieve a user by ID",
        "tags": ["User"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with user data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "summary": "Update a user by ID",
        "tags": ["User"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a user by ID",
        "tags": ["User"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/candidates": {
      "get": {
        "summary": "Retrieve a list of candidates",
        "tags": ["Candidate"],
        "responses": {
          "200": {
            "description": "Successful response with list of candidates",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Candidate"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new candidate",
        "tags": ["Candidate"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CandidateCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Candidate created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Candidate"
                }
              }
            }
          }
        }
      }
    },
    "/api/candidates/{id}": {
      "get": {
        "summary": "Retrieve a candidate by ID",
        "tags": ["Candidate"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with candidate data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Candidate"
                }
              }
            }
          },
          "404": {
            "description": "Candidate not found"
          }
        }
      },
      "put": {
        "summary": "Update a candidate by ID",
        "tags": ["Candidate"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CandidateUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Candidate updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Candidate"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a candidate by ID",
        "tags": ["Candidate"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Candidate deleted successfully"
          },
          "404": {
            "description": "Candidate not found"
          }
        }
      }
    },
    "/api/job-postings": {
      "get": {
        "summary": "Retrieve a list of job postings",
        "tags": ["JobPosting"],
        "responses": {
          "200": {
            "description": "Successful response with list of job postings",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobPosting"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new job posting",
        "tags": ["JobPosting"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobPostingCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Job posting created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobPosting"
                }
              }
            }
          }
        }
      }
    },
    "/api/job-postings/{id}": {
      "get": {
        "summary": "Retrieve a job posting by ID",
        "tags": ["JobPosting"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with job posting data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobPosting"
                }
              }
            }
          },
          "404": { "description": "Job posting not found" }
        }
      },
      "put": {
        "summary": "Update a job posting by ID",
        "tags": ["JobPosting"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobPostingUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Job posting updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobPosting"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a job posting by ID",
        "tags": ["JobPosting"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "204": { "description": "Job posting deleted successfully" },
          "404": { "description": "Job posting not found" }
        }
      }
    },
    "/api/applications": {
      "get": {
        "summary": "Retrieve a list of applications",
        "tags": ["Application"],
        "responses": {
          "200": {
            "description": "Successful response with list of applications",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Application"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new application",
        "tags": ["Application"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Application created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          }
        }
      }
    },
    "/api/applications/{id}": {
      "get": {
        "summary": "Retrieve an application by ID",
        "tags": ["Application"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with application data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          },
          "404": { "description": "Application not found" }
        }
      },
      "put": {
        "summary": "Update an application by ID",
        "tags": ["Application"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Application updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an application by ID",
        "tags": ["Application"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "204": { "description": "Application deleted successfully" },
          "404": { "description": "Application not found" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "required": ["id", "name", "email", "role"],
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Enes Doğanay"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "enes@example.com"
          },
          "role": {
            "type": "string",
            "description": "User role, e.g. 'admin' or 'recruiter'",
            "example": "admin"
          }
        }
      },
      "UserCreateRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Enes Doğanay"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "enes@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "secretPass123!"
          },
          "role": {
            "type": "string",
            "description": "Optional role: admin or recruiter",
            "example": "recruiter"
          }
        }
      },
      "UserUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Enes Doğanay"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "enes@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "newSecretPass123!"
          },
          "role": {
            "type": "string",
            "description": "Optional role: admin or recruiter",
            "example": "admin"
          }
        }
      },
      "Candidate": {
        "type": "object",
        "required": ["id", "user_id", "first_name", "last_name", "email"],
        "properties": {
          "id": {
            "type": "integer",
            "example": 10
          },
          "user_id": {
            "type": "integer",
            "example": 1
          },
          "first_name": {
            "type": "string",
            "example": "Ahmet"
          },
          "last_name": {
            "type": "string",
            "example": "Yılmaz"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "ahmet@example.com"
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "example": "+905551112233"
          },
          "resume_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "example": "http://example.com/resumes/ahmet_yilmaz.pdf"
          }
        }
      },
      "CandidateCreateRequest": {
        "type": "object",
        "required": ["user_id", "first_name", "last_name", "email"],
        "properties": {
          "user_id": {
            "type": "integer",
            "example": 1
          },
          "first_name": {
            "type": "string",
            "example": "Ahmet"
          },
          "last_name": {
            "type": "string",
            "example": "Yılmaz"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "ahmet@example.com"
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "example": "+905551112233"
          },
          "resume_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "example": "http://example.com/resumes/ahmet_yilmaz.pdf"
          }
        }
      },
      "CandidateUpdateRequest": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer",
            "example": 1
          },
          "first_name": {
            "type": "string",
            "example": "Ahmet"
          },
          "last_name": {
            "type": "string",
            "example": "Yılmaz"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "ahmet@example.com"
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "example": "+905551112233"
          },
          "resume_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "example": "http://example.com/resumes/ahmet_yilmaz.pdf"
          }
        }
      },
      "JobPosting": {
        "type": "object",
        "required": ["id", "title", "description", "location"],
        "properties": {
          "id": { "type": "integer", "example": 100 },
          "title": { "type": "string", "example": "Senior PHP Developer" },
          "description": { "type": "string", "example": "Develop and maintain PHP applications." },
          "location": { "type": "string", "example": "Istanbul, Turkey" },
          "posted_by": { "type": "integer", "nullable": true, "example": 1 }
        }
      },
      "JobPostingCreateRequest": {
        "type": "object",
        "required": ["title", "description", "location", "posted_by"],
        "properties": {
          "title": { "type": "string", "example": "Senior PHP Developer" },
          "description": { "type": "string", "example": "Develop and maintain PHP applications." },
          "location": { "type": "string", "example": "Istanbul, Turkey" },
          "posted_by": { "type": "integer", "example": 1 }
        }
      },
      "JobPostingUpdateRequest": {
        "type": "object",
        "properties": {
          "title": { "type": "string", "example": "Senior PHP Developer" },
          "description": { "type": "string", "example": "Develop and maintain PHP applications." },
          "location": { "type": "string", "example": "Istanbul, Turkey" },
          "posted_by": { "type": "integer", "example": 1 }
        }
      },
      "Application": {
        "type": "object",
        "required": ["id", "candidate_id", "job_posting_id", "applied_at", "status"],
        "properties": {
          "id": { "type": "integer", "example": 200 },
          "candidate_id": { "type": "integer", "example": 5 },
          "job_posting_id": { "type": "integer", "example": 12 },
          "applied_at": { "type": "string", "format": "date-time", "example": "2025-08-09T14:30:00Z" },
          "status": { "type": "string", "enum": ["applied", "rejected", "shortlisted"], "example": "applied" }
        }
      },
      "ApplicationCreateRequest": {
        "type": "object",
        "required": ["candidate_id", "job_posting_id"],
        "properties": {
          "candidate_id": { "type": "integer", "example": 5 },
          "job_posting_id": { "type": "integer", "example": 12 },
          "applied_at": { "type": "string", "format": "date-time", "example": "2025-08-09T14:30:00Z" },
          "status": { "type": "string", "enum": ["applied", "rejected", "shortlisted"], "example": "applied" }
        }
      },
      "ApplicationUpdateRequest": {
        "type": "object",
        "properties": {
          "candidate_id": { "type": "integer", "example": 5 },
          "job_posting_id": { "type": "integer", "example": 12 },
          "applied_at": { "type": "string", "format": "date-time", "example": "2025-08-09T14:30:00Z" },
          "status": { "type": "string", "enum": ["applied", "rejected", "shortlisted"], "example": "rejected" }
        }
      }
    }
  }
}
